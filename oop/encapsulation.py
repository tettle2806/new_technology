"""
Инкапсуляция

Механизм инкапсуляции

- attribute (без одного или двух подчеркиваний вначале) - публичное свойство (public)
- _attribute (с одним подчеркиванием) - режим доступа protected
(служит для обращения внутри класса и в его дочерних классах)
- __attribute (с двумя подчеркиванием) - режим доступа private
(служит для обращения только внутри класса)

Интерфейсные методы класса это сеттеры и геттеры в нашем случае это set_coord() и get_coord()

Сеттер (англ. setter, также устанавливающий метод, модифицирующий метод, мутатор)
— метод, используемый в объектно-ориентированном программировании для присвоения какого-либо
значения инкапсулированному полю, например, обработав при этом недопустимые присваивания.

Метод чтения, геттер (англ. getter — получатель) — (в программировании) специальный метод,
позволяющий получить данные, доступ к которым напрямую ограничен.
Это один из методов объектно-ориентированного программирования,
который помогает реализовать гибкий механизм инкапсуляции.

Модуль accessify - для защиты атрибутов класса и его функций

"""


class Point:
    attribute1 = 1  # public
    _attribute2 = 2  # protected
    __attribute3 = 3  # private

    def __init__(self, x, y):
        if self.__check_value(x) and self.__check_value(y):
            self.__x = x
            self.__y = y

    @classmethod
    def __check_value(cls, x):
        return type(x) in (int, float)

    # сеттер
    def set_coord(self, x, y):
        if self.__check_value(x) and self.__check_value(y):
            self.__x = x
            self.__y = y

        else:
            raise ValueError('Кординаты должны быть числами')

    # геттер
    def get_coord(self):
        return self.__x, self.__y




pt = Point(1, 2)
pt.set_coord(2, 4)
print(pt.get_coord())
print(dir(pt))


